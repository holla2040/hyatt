http://www.ambrsoft.com/TrigoCalc/Circle3D.htm
from http://www.ambrsoft.com/TrigoCalc/Circle3D.js

input fields have onkeyup handler called calc
<input type="text" id="txt5" runat="server" class="inputtxt" onkeyup="calc(this.value);" style="background-color: rgb(212, 246, 138);">

function calc(val) {
    var i;
    var flg = true;
    var x1, x2, x3, y1, y2, y3;

    var elico = document.getElementById('txtLine');
    elico.value = "";
    SetColor();

    for (i = 0; i < 6; i++) {
        if (document.getElementById('txt' + i).value == "") flg = false;
    }

    if (flg) {
        x1 = parseFloat(circle3P.txt0.value); if (isNaN(x1)) x1 = 0;
        x2 = parseFloat(circle3P.txt2.value); if (isNaN(x2)) x2 = 0;
        x3 = parseFloat(circle3P.txt4.value); if (isNaN(x3)) x3 = 0;
        y1 = parseFloat(circle3P.txt1.value); if (isNaN(y1)) y1 = 0;
        y2 = parseFloat(circle3P.txt3.value); if (isNaN(y2)) y2 = 0;
        y3 = parseFloat(circle3P.txt5.value); if (isNaN(y3)) y3 = 0;

        //check if all points are on the same line
        var tan1 = (y3 - y2) / (x3 - x2);
        var tan2 = (y2 - y1) / (x2 - x1);

        //two points are the same
        if (((x1 == x2) && (y1 == y2)) || ((x1 == x3) && (y1 == y3)) || ((x2 == x3) && (y2 == y3))) {
            elico.value = "ERROR - Two points are the same ...";
            clearRes();
            return;
        }

        if (tan1 == tan2) {
            //all point are on line
            elico.value = "ERROR - All points are on the same line !!!";
            clearRes();
            return;
        }


        a = x1 * (y2 - y3) - y1 * (x2 - x3) + x2 * y3 - x3 * y2;
        b = (x1 * x1 + y1 * y1) * (y3 - y2) + (x2 * x2 + y2 * y2) * (y1 - y3) + (x3 * x3 + y3 * y3) * (y2 - y1);
        c = (x1 * x1 + y1 * y1) * (x2 - x3) + (x2 * x2 + y2 * y2) * (x3 - x1) + (x3 * x3 + y3 * y3) * (x1 - x2);
        d = (x1 * x1 + y1 * y1) * (x3 * y2 - x2 * y3) + (x2 * x2 + y2 * y2) * (x1 * y3 - x3 * y1) + (x3 * x3 + y3 * y3) * (x2 * y1 - x1 * y2);
        radius = Math.sqrt((b * b + c * c - 4 * a * d) / (4 * a * a));
        centerX = -b / (2 * a);
        centerY = -c / (2 * a);
        area = Math.PI * radius * radius;
        perimeter = 2 * Math.PI * radius;
        printResult();
    }
    else
        clearRes();
}
